/*
Copyright 2023 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

package olivepb;

option go_package = "github.com/olive-io/olive/apis/pb/olive;olivepb";

import "github.com/olive-io/olive/apis/core/v1/generated.proto";

message InternalKV {
  bytes key = 1;
  bytes value = 2;
}

message KeyValue {
  bytes key = 1;
  bytes value = 2;
}

message RaftHeader {
  uint64 ID = 1;
}

message RaftInternalRequest {
  RaftHeader header = 1;
  ShardRangeRequest range = 2;
  ShardPutRequest put = 3;
  ShardDeleteRequest delete = 4;

  ShardDeployDefinitionRequest deploy_definition = 11;
  ShardRunBpmnProcessRequest run_bpmn_process = 12;
}

message LoggablePutRequest  {
  bytes key = 1;
  int64 valueSize = 2;
}

message RaftResponseHeader {
  // region_id is the ID of the region which sent the response.
  uint64 region_id = 1;
  // replica_id is the ID of the replica which sent the response.
  uint64 replica_id = 2;
  // raft_term is the raft term when the request was applied.
  uint64 raft_term = 3;
}

message ShardRangeRequest {
  bytes key = 1;
  bytes range_end = 2;
  int64 limit = 3;
  bool serializable = 4;
}

message ShardRangeResponse {
  RaftResponseHeader header = 1;
  repeated KeyValue kvs = 2;
}

message ShardPutRequest {
  bytes key = 1;
  bytes value = 2;
  bool is_sync = 3;
}

message ShardPutResponse {
  RaftResponseHeader header = 1;
  KeyValue preKv = 2;
}

message ShardDeleteRequest {
  bytes key = 1;
  bool is_sync = 2;
}

message ShardDeleteResponse {
  RaftResponseHeader header = 1;
  KeyValue preKv = 2;
}

message ShardDeployDefinitionRequest {
  github.com.olive_io.olive.apis.core.v1.Definition definition = 1;
}

message ShardDeployDefinitionResponse {
  RaftResponseHeader header = 1;
  github.com.olive_io.olive.apis.core.v1.Definition definition = 2;
}

message ShardRunBpmnProcessRequest {
  github.com.olive_io.olive.apis.core.v1.Process process = 1;
}

message ShardRunBpmnProcessResponse {
  RaftResponseHeader header = 1;
  github.com.olive_io.olive.apis.core.v1.ProcessStat stat = 2;
}

service RunnerRPC {
  rpc GetDefinitionArchive(GetDefinitionArchiveRequest) returns (GetDefinitionArchiveResponse);
  rpc GetProcessStat(GetProcessStatRequest) returns (GetProcessStatResponse);
}

message GetDefinitionArchiveRequest {
  string namespace = 1;
  string name = 2;
}

message GetDefinitionArchiveResponse {
  repeated github.com.olive_io.olive.apis.core.v1.Definition definitions = 1;
}

message GetProcessStatRequest {
  uint64 region = 1;
  string definitionId = 2;
  uint64 definitionVersion = 3;
  string id = 4;
}

message GetProcessStatResponse {
  RaftResponseHeader header = 1;
  github.com.olive_io.olive.apis.core.v1.ProcessStat stat = 2;
}