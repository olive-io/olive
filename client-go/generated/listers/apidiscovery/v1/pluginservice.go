/*
Copyright 2024 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	apidiscoveryv1 "github.com/olive-io/olive/apis/apidiscovery/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PluginServiceLister helps list PluginServices.
// All objects returned here must be treated as read-only.
type PluginServiceLister interface {
	// List lists all PluginServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apidiscoveryv1.PluginService, err error)
	// PluginServices returns an object that can list and get PluginServices.
	PluginServices(namespace string) PluginServiceNamespaceLister
	PluginServiceListerExpansion
}

// pluginServiceLister implements the PluginServiceLister interface.
type pluginServiceLister struct {
	listers.ResourceIndexer[*apidiscoveryv1.PluginService]
}

// NewPluginServiceLister returns a new PluginServiceLister.
func NewPluginServiceLister(indexer cache.Indexer) PluginServiceLister {
	return &pluginServiceLister{listers.New[*apidiscoveryv1.PluginService](indexer, apidiscoveryv1.Resource("pluginservice"))}
}

// PluginServices returns an object that can list and get PluginServices.
func (s *pluginServiceLister) PluginServices(namespace string) PluginServiceNamespaceLister {
	return pluginServiceNamespaceLister{listers.NewNamespaced[*apidiscoveryv1.PluginService](s.ResourceIndexer, namespace)}
}

// PluginServiceNamespaceLister helps list and get PluginServices.
// All objects returned here must be treated as read-only.
type PluginServiceNamespaceLister interface {
	// List lists all PluginServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apidiscoveryv1.PluginService, err error)
	// Get retrieves the PluginService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apidiscoveryv1.PluginService, error)
	PluginServiceNamespaceListerExpansion
}

// pluginServiceNamespaceLister implements the PluginServiceNamespaceLister
// interface.
type pluginServiceNamespaceLister struct {
	listers.ResourceIndexer[*apidiscoveryv1.PluginService]
}
