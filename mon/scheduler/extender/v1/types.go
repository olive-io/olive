/*
Copyright 2024 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package v1

import (
	"k8s.io/apimachinery/pkg/types"

	corev1 "github.com/olive-io/olive/apis/core/v1"
)

const (
	// MinExtenderPriority defines the min priority value for extender.
	MinExtenderPriority int64 = 0

	// MaxExtenderPriority defines the max priority value for extender.
	MaxExtenderPriority int64 = 10
)

// ExtenderPreemptionResult represents the result returned by preemption phase of extender.
type ExtenderPreemptionResult struct {
	RunnerNameToMetaVictims map[string]*MetaVictims
}

// ExtenderPreemptionArgs represents the arguments needed by the extender to preempt pods on nodes.
type ExtenderPreemptionArgs struct {
	// Region being scheduled
	Region *corev1.Region
	// Victims map generated by scheduler preemption phase
	// Only set RunnerNameToMetaVictims if Extender.RunnerCacheCapable == true. Otherwise, only set RunnerNameToVictims.
	RunnerNameToVictims     map[string]*Victims
	RunnerNameToMetaVictims map[string]*MetaVictims
}

// Victims represents:
//
//	pods:  a group of pods expected to be preempted.
//	numPDBViolations: the count of violations of RegionDisruptionBudget
type Victims struct {
	Regions          []*corev1.Region
	NumPDBViolations int64
}

// MetaRegion represent identifier for a v1.Region
type MetaRegion struct {
	UID string
}

// MetaVictims represents:
//
//	pods:  a group of pods expected to be preempted.
//	  Only Region identifiers will be sent and user are expect to get v1.Region in their own way.
//	numPDBViolations: the count of violations of RegionDisruptionBudget
type MetaVictims struct {
	Regions          []*MetaRegion
	NumPDBViolations int64
}

// ExtenderArgs represents the arguments needed by the extender to filter/prioritize
// nodes for a pod.
type ExtenderArgs struct {
	// Region being scheduled
	Region *corev1.Region
	// List of candidate nodes where the pod can be scheduled; to be populated
	// only if Extender.RunnerCacheCapable == false
	Runners *corev1.RunnerList
	// List of candidate node names where the pod can be scheduled; to be
	// populated only if Extender.RunnerCacheCapable == true
	RunnerNames *[]string
}

// FailedRunnersMap represents the filtered out nodes, with node names and failure messages
type FailedRunnersMap map[string]string

// ExtenderFilterResult represents the results of a filter call to an extender
type ExtenderFilterResult struct {
	// Filtered set of nodes where the pod can be scheduled; to be populated
	// only if Extender.RunnerCacheCapable == false
	Runners *corev1.RunnerList
	// Filtered set of nodes where the pod can be scheduled; to be populated
	// only if Extender.RunnerCacheCapable == true
	RunnerNames *[]string
	// Filtered out nodes where the pod can't be scheduled and the failure messages
	FailedRunners FailedRunnersMap
	// Filtered out nodes where the pod can't be scheduled and preemption would
	// not change anything. The value is the failure message same as FailedRunners.
	// Runners specified here takes precedence over FailedRunners.
	FailedAndUnresolvableRunners FailedRunnersMap
	// Error message indicating failure
	Error string
}

// ExtenderBindingArgs represents the arguments to an extender for binding a pod to a node.
type ExtenderBindingArgs struct {
	// RegionName is the name of the pod being bound
	RegionName string
	// RegionNamespace is the namespace of the pod being bound
	RegionNamespace string
	// RegionUID is the UID of the pod being bound
	RegionUID types.UID
	// Runner selected by the scheduler
	Runner string
}

// ExtenderBindingResult represents the result of binding of a pod to a node from an extender.
type ExtenderBindingResult struct {
	// Error message indicating failure
	Error string
}

// HostPriority represents the priority of scheduling to a particular host, higher priority is better.
type HostPriority struct {
	// Name of the host
	Host string
	// Score associated with the host
	Score int64
}

// HostPriorityList declares a []HostPriority type.
type HostPriorityList []HostPriority
