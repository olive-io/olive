/*
   Copyright 2024 The olive Authors

   This program is offered under a commercial and under the AGPL license.
   For AGPL licensing, see below.

   AGPL licensing:
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/olive-io/olive/client/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Consumers returns a ConsumerInformer.
	Consumers() ConsumerInformer
	// ConsumerLists returns a ConsumerListInformer.
	ConsumerLists() ConsumerListInformer
	// Endpoints returns a EndpointInformer.
	Endpoints() EndpointInformer
	// EndpointLists returns a EndpointListInformer.
	EndpointLists() EndpointListInformer
	// Nodes returns a NodeInformer.
	Nodes() NodeInformer
	// NodeLists returns a NodeListInformer.
	NodeLists() NodeListInformer
	// Services returns a ServiceInformer.
	Services() ServiceInformer
	// ServiceLists returns a ServiceListInformer.
	ServiceLists() ServiceListInformer
	// Yards returns a YardInformer.
	Yards() YardInformer
	// YardLists returns a YardListInformer.
	YardLists() YardListInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Consumers returns a ConsumerInformer.
func (v *version) Consumers() ConsumerInformer {
	return &consumerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ConsumerLists returns a ConsumerListInformer.
func (v *version) ConsumerLists() ConsumerListInformer {
	return &consumerListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Endpoints returns a EndpointInformer.
func (v *version) Endpoints() EndpointInformer {
	return &endpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// EndpointLists returns a EndpointListInformer.
func (v *version) EndpointLists() EndpointListInformer {
	return &endpointListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Nodes returns a NodeInformer.
func (v *version) Nodes() NodeInformer {
	return &nodeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NodeLists returns a NodeListInformer.
func (v *version) NodeLists() NodeListInformer {
	return &nodeListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Services returns a ServiceInformer.
func (v *version) Services() ServiceInformer {
	return &serviceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServiceLists returns a ServiceListInformer.
func (v *version) ServiceLists() ServiceListInformer {
	return &serviceListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Yards returns a YardInformer.
func (v *version) Yards() YardInformer {
	return &yardInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// YardLists returns a YardListInformer.
func (v *version) YardLists() YardListInformer {
	return &yardListInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
