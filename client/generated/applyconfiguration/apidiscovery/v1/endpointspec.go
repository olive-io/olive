/*
Copyright 2024 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// EndpointSpecApplyConfiguration represents an declarative configuration of the EndpointSpec type for use
// with apply.
type EndpointSpecApplyConfiguration struct {
	Request  *BoxApplyConfiguration `json:"request,omitempty"`
	Response *BoxApplyConfiguration `json:"response,omitempty"`
}

// EndpointSpecApplyConfiguration constructs an declarative configuration of the EndpointSpec type for use with
// apply.
func EndpointSpec() *EndpointSpecApplyConfiguration {
	return &EndpointSpecApplyConfiguration{}
}

// WithRequest sets the Request field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Request field is set to the value of the last call.
func (b *EndpointSpecApplyConfiguration) WithRequest(value *BoxApplyConfiguration) *EndpointSpecApplyConfiguration {
	b.Request = value
	return b
}

// WithResponse sets the Response field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Response field is set to the value of the last call.
func (b *EndpointSpecApplyConfiguration) WithResponse(value *BoxApplyConfiguration) *EndpointSpecApplyConfiguration {
	b.Response = value
	return b
}
