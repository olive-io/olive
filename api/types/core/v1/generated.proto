// Copyright 2024 lack
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// This file was autogenerated by goproto-gen. Do not edit it manually!

syntax = 'proto3';

package github.com.olive_io.olive.api.types.core.v1;

import "github.com/olive-io/olive/api/types/meta/v1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/olive-io/olive/api/types/core/v1";

// +gogo:genproto=true
// +gogo:deepcopy=true
message BpmnArgs {
  map<string, string> headers = 1;

  map<string, bytes> properties = 2;

  map<string, bytes> dataObjects = 3;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
// +gogo:deepcopy:interfaces=github.com/olive-io/olive/api.Object
message Custom {
  github.com.olive_io.olive.api.types.meta.v1.TypeMeta typeMeta = 1;

  github.com.olive_io.olive.api.types.meta.v1.ObjectMeta metadata = 2;

  string host = 3;

  string username = 4;

  string password = 5;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
// +gogo:deepcopy:interfaces=github.com/olive-io/olive/api.Object
message Definition {
  github.com.olive_io.olive.api.types.meta.v1.TypeMeta typeMeta = 1;

  github.com.olive_io.olive.api.types.meta.v1.ObjectMeta metadata = 2;

  string content = 3;

  int64 version = 4;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message FlowNode {
  string type = 1;

  string id = 2;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message FlowNodeStat {
  string id = 1;

  string name = 2;

  ProcessContext context = 3;

  int32 retries = 4;

  string message = 5;

  int64 startTime = 6;

  int64 endTime = 7;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message Header {
  uint64 runner = 1;

  int64 rev = 2;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message Member {
  // ID is the member ID for this member.
  uint64 id = 1;

  // Name is the human-readable name of the member. If the member is not started, the name will be an empty string.
  string name = 2;

  // PeerURLs is the list of URLs the member exposes to the cluster for communication.
  repeated string peer_urls = 3;

  // ClientURLs is the list of URLs the member exposes to clients for communication. If the member is not started, clientURLs will be empty.
  repeated string client_urls = 4;

  // isLearner indicates if the member is raft learner.
  bool is_leader = 5;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message Plane {
  uint64 cluster_id = 1;

  uint64 leader = 2;

  repeated PlaneMember members = 3;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message PlaneMember {
  uint64 id = 1;

  repeated string client_urls = 2;

  repeated string peer_urls = 3;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message ProcessContext {
  map<string, bytes> variables = 1;

  map<string, bytes> dataObjects = 2;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
// +gogo:deepcopy:interfaces=github.com/olive-io/olive/api.Object
message ProcessInstance {
  github.com.olive_io.olive.api.types.meta.v1.TypeMeta typeMeta = 1;

  github.com.olive_io.olive.api.types.meta.v1.ObjectMeta metadata = 2;

  BpmnArgs args = 3;

  string definitionsId = 4;

  int64 definitionsVersion = 5;

  string definitionsProcess = 6;

  string definitionsContent = 7;

  ProcessContext context = 8;

  repeated FlowNode flowNodes = 9;

  map<string, FlowNodeStat> flowNodeStatMap = 10;

  int32 attempts = 11;

  int64 creationTimestamp = 12;

  int64 endTimestamp = 13;

  string status = 14;

  string message = 15;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message ResponseHeader {
  // ClusterID is the ID of the cluster which sent the response.
  uint64 cluster_id = 1;

  // MemberID is the ID of the member which sent the response.
  uint64 member_id = 2;

  // RaftTerm is the raft term when the request was applied.
  uint64 raft_term = 3;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message Runner {
  string name = 1;

  // listenURL is the URL the runner is listening on.
  string listenURL = 2;

  string version = 3;

  int64 heartbeatMs = 4;

  string hostname = 5;

  map<string, string> features = 6;

  int32 cpu = 7;

  int64 memory = 8;

  int64 diskSize = 9;
}

// +gogo:genproto=true
// +gogo:deepcopy=true
message RunnerStatistics {
  string name = 1;

  double cpuUsed = 2;

  double memoryUsed = 3;

  uint64 bpmnProcesses = 4;

  uint64 bpmnEvents = 5;

  uint64 bpmnTasks = 6;

  string state = 7;

  string error = 8;

  int64 timestamp = 9;
}

