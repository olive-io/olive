/*
Copyright 2023 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

package rpc.consolepb;

import "types/bpmn.proto";
// for validate
import "validate/validate.proto";
// for grpc-gateway
import "google/api/annotations.proto";
// for openapi
import "openapi/v3/annotations.proto";

option go_package = "github.com/olive-io/olive/api/rpc/consolepb;consolepb";
option java_multiple_files = true;
option java_package = "io.olive.api.rpc.consolepb";
option java_outer_classname = "OliveRPCConsolePb";

option (openapi.v3.document) = {
  components: {
    security_schemes: {
      additional_properties: {
        name: "bearerAuth"
        value: {
          security_scheme: {
            type: "http",
            scheme: "bearer",
            bearer_format: "JWT"
          }
        }
      }
    }
  }
};

service BpmnRPC {
  rpc ListDefinitions(ListDefinitionsRequest) returns (ListDefinitionsResponse) {
    option (google.api.http) = {
      get: "/v1/definitions"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Definition:list"],
            }
          }
        }
      ],
    };
  }

  rpc GetDefinition(GetDefinitionRequest) returns (GetDefinitionResponse) {
    option (google.api.http) = {
      get: "/v1/definitions/{id}"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Definition:get"],
            }
          }
        }
      ]
    };
  }

  rpc DeployDefinition(DeployDefinitionRequest) returns (DeployDefinitionResponse) {
    option (google.api.http) = {
      post: "/v1/definitions"
      body: "*"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Definition:post"],
            }
          }
        }
      ]
    };
  }

  rpc DeleteDefinition(DeleteDefinitionRequest) returns (DeleteDefinitionResponse) {
    option (google.api.http) = {
      delete: "/v1/definitions/{id}"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Definition:delete"],
            }
          }
        }
      ]
    };
  }

  rpc ListProcesses(ListProcessesRequest) returns (ListProcessesResponse) {
    option (google.api.http) = {
      get: "/v1/processes"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Process:list"],
            }
          }
        }
      ]
    };
  }

  rpc GetProcess(GetProcessRequest) returns (GetProcessResponse) {
    option (google.api.http) = {
      get: "/v1/processes/{id}"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Process:get"],
            }
          }
        }
      ]
    };
  }

  rpc DeleteProcess(DeleteProcessRequest) returns (DeleteProcessResponse) {
    option (google.api.http) = {
      delete: "/v1/processes/{id}"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Process:delete"],
            }
          }
        }
      ]
    };
  }
}

message ListDefinitionsRequest {
  int32 page = 1 [(validate.rules).int32 = {gte: -1}];
  int32 size = 2 [(validate.rules).int32 = {gte: 0}];
}

message ListDefinitionsResponse {
  repeated types.Definition definitions = 1;
  int64 total = 2;
}

message GetDefinitionRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  uint64 version = 2;
}

message GetDefinitionResponse {
  types.Definition definition = 1;
}

message DeployDefinitionRequest {
  types.Definition definition = 1 [(validate.rules).message.required = true];
}

message DeployDefinitionResponse {
  types.Definition definition = 1;
}

message DeleteDefinitionRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  uint64 version = 2;
}

message DeleteDefinitionResponse {
  types.Definition definition = 1;
}

message ListProcessesRequest {
  int32 page = 1 [(validate.rules).int32 = {gte: -1}];
  int32 size = 2 [(validate.rules).int32 = {gte: 0}];
  int64 definition = 3;
  uint64 version = 4;
  types.ProcessStatus status = 5;
}

message ListProcessesResponse {
  repeated types.Process processes = 1;
  int64 total = 2;
}

message GetProcessRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message GetProcessResponse {
  types.Process process = 1;
}

message DeleteProcessRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message DeleteProcessResponse {
  types.Process process = 1;
}
