/*
Copyright 2023 The olive Authors

This program is offered under a commercial and under the AGPL license.
For AGPL licensing, see below.

AGPL licensing:
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

package rpc.consolepb;

import "types/auth.proto";
import "types/internal.proto";
// for validate
import "validate/validate.proto";
// for grpc-gateway
import "google/api/annotations.proto";
// for openapi
import "openapi/v3/annotations.proto";

option go_package = "github.com/olive-io/olive/api/rpc/consolepb;consolepb";
option java_multiple_files = true;
option java_package = "io.olive.api.rpc.consolepb";
option java_outer_classname = "OliveRPCConsolePb";

service SystemRPC {
  rpc ListRunners(ListRunnersRequest) returns (ListRunnersResponse) {
    option (google.api.http) = {
      get: "/v1/system/runners"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Runner:list"],
            }
          }
        }
      ]
    };
  }

  rpc GetRunner(GetRunnerRequest) returns (GetRunnerResponse) {
    option (google.api.http) = {
      get: "/v1/system/runners/{id}"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["Runner:get"],
            }
          }
        }
      ]
    };
  }

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/system/users"
    };

    option (openapi.v3.operation) = {
      security: [
        {
          additional_properties: {
            name: "bearerAuth",
            value: {
              value: ["User:list"],
            }
          }
        }
      ],
    };
  }
}

message ListRunnersRequest {}

message ListRunnersResponse {
  repeated types.Runner runners = 1;
}

message GetRunnerRequest {
  uint64 id = 1 [(validate.rules).uint64 = {gt: 0}];
}

message GetRunnerResponse {
  types.Runner runner = 1;
  types.RunnerStat stat = 2;
}

message ListUsersRequest {
  int32 page = 1 [(validate.rules).int32 = {gte: -1}];
  int32 size = 2 [(validate.rules).int32 = {gt: 0}];

  string name = 3;
  string email = 4;
  string mobile = 5;
}

message ListUsersResponse {
  repeated types.User users = 1;
  int64 total = 2;
}