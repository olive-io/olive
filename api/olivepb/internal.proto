// Copyright 2023 Lack (xingyys@gmail.com).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package olivepb;

import "gogoproto/gogo.proto";

option go_package = "github.com/olive-io/olive/api/olivepb;olivepb";
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

message OliveHeader {
  uint64 region = 1;
  int64 rev = 2;
}

message ResponseHeader {

}

message Runner {
  uint64 id = 1;
  string advertiseListen = 2;
  string peerListen = 3;
  int64 heartbeatMs = 4;
  string hostname = 5;
  int32 cpus = 6;
  int64 total = 7;
  string version = 8;
}

message RunnerStat {
  enum State {
    UnKnown = 0;
    Ready = 1;
    NotReady = 2;
    Alarm = 3;
  }

  uint64 id = 1;
  int32 cpuPer = 2;
  int32 memoryPer = 3;

  repeated uint64 regions = 11;
  repeated uint64 leaders = 12;
  uint64 definitions = 13;
  uint64 bpmnProcesses = 14;
  uint64 bpmnEvents = 15;
  uint64 bpmnTasks = 16;

  State state = 100;
  string error = 101;
}

message Region {
  uint64 id = 1;
  string name = 2;

  // replicaID => runnerId
  map<uint64, uint64> members = 3;
  map<uint64, RegionReplica> replicas = 4;

  uint64 electionRTT = 5;
  uint64 heartbeatRTT = 6;
}

message RegionReplica {
  uint64 region = 1;
  uint64 id = 2;
  bool isNonVoting = 3;
  bool isWitness = 4;
}

message RegionStat {
  uint64 id = 1;
  uint64 leader = 3;
  uint64 term = 4;

  uint64 definitions = 11;
  uint64 bpmnProcesses = 12;
  uint64 bpmnEvents = 13;
  uint64 bpmnTasks = 14;
}

message Definition {
  OliveHeader header = 100;

  string id = 1;
  string name = 2;
  bytes content = 3;
  int64 version = 4;
}

message ProcessInstance {
  OliveHeader header = 100;

  string definition = 1;
}