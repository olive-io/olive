// Copyright 2023 The olive Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package discoverypb;

option go_package = "github.com/olive-io/olive/api/discoverypb;discoverypb";

import "github.com/olive-io/olive/api/discoverypb/discovery.proto";

// for grpc-gateway
import "google/api/annotations.proto";

service Gateway {
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/v1/olive/gateway/ping/{message}",
    };
  };

  rpc Transmit(TransmitRequest) returns (TransmitResponse) {
    option (google.api.http) = {
      post: "/v1/olive/gateway/transmit",
      body: "*"
    };
  }

  rpc ClientStream(stream PingRequest) returns (PingResponse) {};
  rpc ServerStream(PingRequest) returns (stream PingResponse) {};
  rpc BinaryStream(stream PingRequest) returns (stream PingResponse) {};
}

message PingRequest {
  string message = 1;
}

message PingResponse {
  string reply = 1;
}

message TransmitRequest {
  discoverypb.Activity activity = 1;
  map<string, string> headers = 2;
  map<string, discoverypb.Box> properties = 3;
  map<string, discoverypb.Box> dataObjects = 4;
}

// Response save the data from gateway Handle function
message TransmitResponse {
  map<string, Box> properties = 1;
  map<string, Box> dataObjects = 2;
}

