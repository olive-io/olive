syntax = "proto3";

package discoverypb;

option go_package = "github.com/olive-io/olive/api/discoverypb;discoverypb";

import "google/protobuf/any.proto";

message OpenAPI {
  string openapi = 1;
  OpenAPIInfo info = 2;
  OpenAPIExternalDocs externalDocs = 3;
  repeated OpenAPIServer servers = 4;
  repeated OpenAPITag tags = 5;
  map<string, OpenAPIPath> paths = 6;
  OpenAPIComponents components = 7;
}

message OpenAPIServer {
  string url = 1;
  string Description = 2;
}

message OpenAPIInfo {
  string title = 1;
  string description = 2;
  string termsOfService = 3;
  OpenAPIContact contact = 4;
  OpenAPILicense license = 5;
  string version = 6;
}

message OpenAPIContact {
  string name = 1;
  string email = 2;
}

message OpenAPILicense {
  string name = 1;
  string url = 2;
}

message OpenAPITag {
  string name = 1;
  string description = 2;
  OpenAPIExternalDocs externalDocs = 3;
}

message OpenAPIExternalDocs {
  string description = 1;
  string url = 2;
}

message OpenAPIPath {
  OpenAPIEndpoint get = 1;
  OpenAPIEndpoint post = 2;
  OpenAPIEndpoint put = 3;
  OpenAPIEndpoint patch = 4;
  OpenAPIEndpoint delete = 5;
}

message OpenAPIEndpoint {
  repeated string tags = 1;
  string summary = 2;
  string description = 3;
  string operationId = 4;
  bool deprecated = 5;
  PathRequestBody requestBody = 6;
  repeated PathParameters parameters = 7;
  map<string, PathResponse> responses = 8;
  repeated PathSecurity security = 9;
  map<string, string> metadata = 10;
}

message PathSecurity {
  repeated string basic = 1;
  repeated string apiKeys = 2;
  repeated string bearer = 3;
  repeated string oAuth2 = 4;
  repeated string openId = 5;
  repeated string cookieAuth = 6;
}

message PathParameters {
  // query, cookie, path
  string in = 1;
  string name = 2;
  bool required = 3;
  string description = 4;
  bool allowReserved = 5;
  string style = 6;
  bool explode = 7;
  bool allowEmptyValue = 8;
  SchemaObject schema = 9;
  string example = 10;
}

message PathRequestBody {
  string description = 1;
  bool required = 2;
  PathRequestBodyContent content = 3;
}

message PathRequestBodyContent {
  ApplicationContent applicationJson = 1;
  ApplicationContent applicationXml = 2;
  ApplicationContent applicationYaml = 3;
}

message ApplicationContent {
  SchemaObject schema = 1;
}

// PathResponse is swagger path response
message PathResponse {
  string description = 1;
  PathRequestBodyContent content = 2;
}

message OpenAPIComponents {
  map<string, SecuritySchema> securitySchemes = 1;
  map<string, Model> schemas = 2;
}

// BasicSecurity is swagger Basic Authorization security (https://swagger.io/docs/specification/authentication/basic-authentication/)
message SecuritySchema {
  // http, apiKey, oauth, openIdConnect
  string type = 1;
  string scheme = 2;
  // header
  string in = 3;
  string name = 4;
  string description = 5;

  // JWT
  string bearerFormat = 11;
  // OAuth Flows
  SecurityOAuthFlows flows = 12;
  // openId
  string openIdConnectUrl = 13;
}

message SecurityOAuthFlows {
    OAuthFlowsImplicit implicit = 1;
}

message OAuthFlowsImplicit {
  string authorizationUrl = 1;
  map<string, string> scopes = 2;
}

// Model is swagger data models (https://swagger.io/docs/specification/data-models/)
message Model {
  // string, number, integer, boolean, array, object
  string type = 1;
  repeated SchemaObject oneOf = 2;
  repeated SchemaObject allOf = 3;
  repeated SchemaObject anyOf = 4;
  repeated SchemaObject not = 5;
  map<string, SchemaObject> properties = 6;
  repeated string required = 7;
}

message SchemaObject {
  // string, number, integer, boolean, array, object
  string type = 1;
  string format = 2;
  string description = 3;
  string example = 4;
  string pattern = 5;
  bool nullable = 6;
  bool readOnly = 7;
  bool writeOnly = 8;
  bool required = 9;
  string ref = 10;
  string default = 11;

  int32 minLength = 20;
  int32 maxLength = 21;

  int32 multipleOf = 30;
  int32 minimum = 31;
  bool exclusiveMinimum = 32;
  int32 maximum = 33;
  bool exclusiveMaximum = 34;

  repeated string enum = 41;
  SchemaObject items = 42;

  repeated PathParameters parameters = 51;

  SchemaObject additionalProperties = 60;
}
