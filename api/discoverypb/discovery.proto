// Copyright 2023 The olive Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package discoverypb;

option go_package = "github.com/olive-io/olive/api/discoverypb;discoverypb";

import "github.com/olive-io/olive/api/discoverypb/openapi.proto";

enum ActivityType {
  Unknown = 0;
  Task = 1;
  ServiceTask = 2;
  ScriptTask = 3;
  UserTask = 4;
  SendTask = 5;
  ReceiveTask = 6;
  ManualTask = 7;
  CallActivity = 8;
}

message Activity {
  ActivityType type = 1;
  string id = 2;
  string name = 3;
}

enum BoxType {
  string = 0;
  integer = 1;
  float = 2;
  boolean = 3;
  array = 4;
  object = 5;
  map = 6;
}

// Box is an opaque value for a request or response
message Box {
  BoxType type = 1;
  // Box Value by json.Marshal
  bytes data = 2;
  // the reference, points to OpenAPI Component when type is Object
  string ref = 3;
  map<string, Box> parameters = 4;
}

// Endpoint is a endpoint provided by a service
message Endpoint {
  string name = 1;

  Box request = 2;

  Box response = 3;

  map<string, string> metadata = 4;
}

// Event is registry event
message Event {
  // Event Id
  string id = 1;

  // type of event
  string type = 2;

  // unix timestamp of event
  int64 timestamp = 3;

  // service entry
  Service service = 4;
}

// Node represents the node the service is on
message Node {
  string id = 1;

  string address = 2;

  int64 port = 3;

  map<string, string> metadata = 4;
}

// Result is returns by the watcher
message Result {
  string action = 1;

  Service service = 2;

  int64 timestamp = 3;
}

// Service represents a olive service
message Service {
  string name = 1;

  string version = 2;

  string namespace = 3;

  map<string, string> metadata = 4;

  repeated Endpoint endpoints = 5;

  repeated Node nodes = 6;

  int64 ttl = 7;

  discoverypb.OpenAPI openapi = 8;
}
