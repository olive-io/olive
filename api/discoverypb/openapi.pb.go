//
//Copyright 2024 The olive Authors
//
//This program is offered under a commercial and under the AGPL license.
//For AGPL licensing, see below.
//
//AGPL licensing:
//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU Affero General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU Affero General Public License for more details.
//
//You should have received a copy of the GNU Affero General Public License
//along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: github.com/olive-io/olive/api/discoverypb/openapi.proto

package discoverypb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openapi      string                  `protobuf:"bytes,1,opt,name=openapi,proto3" json:"openapi,omitempty"`
	Info         *OpenAPIInfo            `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	ExternalDocs *OpenAPIExternalDocs    `protobuf:"bytes,3,opt,name=externalDocs,proto3" json:"externalDocs,omitempty"`
	Servers      []*OpenAPIServer        `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
	Tags         []*OpenAPITag           `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Paths        map[string]*OpenAPIPath `protobuf:"bytes,6,rep,name=paths,proto3" json:"paths,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Components   *OpenAPIComponents      `protobuf:"bytes,7,opt,name=components,proto3" json:"components,omitempty"`
}

func (x *OpenAPI) Reset() {
	*x = OpenAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPI) ProtoMessage() {}

func (x *OpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPI.ProtoReflect.Descriptor instead.
func (*OpenAPI) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{0}
}

func (x *OpenAPI) GetOpenapi() string {
	if x != nil {
		return x.Openapi
	}
	return ""
}

func (x *OpenAPI) GetInfo() *OpenAPIInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OpenAPI) GetExternalDocs() *OpenAPIExternalDocs {
	if x != nil {
		return x.ExternalDocs
	}
	return nil
}

func (x *OpenAPI) GetServers() []*OpenAPIServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *OpenAPI) GetTags() []*OpenAPITag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OpenAPI) GetPaths() map[string]*OpenAPIPath {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *OpenAPI) GetComponents() *OpenAPIComponents {
	if x != nil {
		return x.Components
	}
	return nil
}

type OpenAPIServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *OpenAPIServer) Reset() {
	*x = OpenAPIServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIServer) ProtoMessage() {}

func (x *OpenAPIServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIServer.ProtoReflect.Descriptor instead.
func (*OpenAPIServer) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{1}
}

func (x *OpenAPIServer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpenAPIServer) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type OpenAPIInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TermsOfService string          `protobuf:"bytes,3,opt,name=termsOfService,proto3" json:"termsOfService,omitempty"`
	Contact        *OpenAPIContact `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	License        *OpenAPILicense `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	Version        string          `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *OpenAPIInfo) Reset() {
	*x = OpenAPIInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIInfo) ProtoMessage() {}

func (x *OpenAPIInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIInfo.ProtoReflect.Descriptor instead.
func (*OpenAPIInfo) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{2}
}

func (x *OpenAPIInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OpenAPIInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpenAPIInfo) GetTermsOfService() string {
	if x != nil {
		return x.TermsOfService
	}
	return ""
}

func (x *OpenAPIInfo) GetContact() *OpenAPIContact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *OpenAPIInfo) GetLicense() *OpenAPILicense {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *OpenAPIInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type OpenAPIContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *OpenAPIContact) Reset() {
	*x = OpenAPIContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIContact) ProtoMessage() {}

func (x *OpenAPIContact) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIContact.ProtoReflect.Descriptor instead.
func (*OpenAPIContact) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{3}
}

func (x *OpenAPIContact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenAPIContact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type OpenAPILicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *OpenAPILicense) Reset() {
	*x = OpenAPILicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPILicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPILicense) ProtoMessage() {}

func (x *OpenAPILicense) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPILicense.ProtoReflect.Descriptor instead.
func (*OpenAPILicense) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{4}
}

func (x *OpenAPILicense) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenAPILicense) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type OpenAPITag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ExternalDocs *OpenAPIExternalDocs `protobuf:"bytes,3,opt,name=externalDocs,proto3" json:"externalDocs,omitempty"`
}

func (x *OpenAPITag) Reset() {
	*x = OpenAPITag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPITag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPITag) ProtoMessage() {}

func (x *OpenAPITag) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPITag.ProtoReflect.Descriptor instead.
func (*OpenAPITag) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{5}
}

func (x *OpenAPITag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenAPITag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpenAPITag) GetExternalDocs() *OpenAPIExternalDocs {
	if x != nil {
		return x.ExternalDocs
	}
	return nil
}

type OpenAPIExternalDocs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *OpenAPIExternalDocs) Reset() {
	*x = OpenAPIExternalDocs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIExternalDocs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIExternalDocs) ProtoMessage() {}

func (x *OpenAPIExternalDocs) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIExternalDocs.ProtoReflect.Descriptor instead.
func (*OpenAPIExternalDocs) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{6}
}

func (x *OpenAPIExternalDocs) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpenAPIExternalDocs) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type OpenAPIPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Get    *OpenAPIEndpoint `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	Post   *OpenAPIEndpoint `protobuf:"bytes,2,opt,name=post,proto3" json:"post,omitempty"`
	Put    *OpenAPIEndpoint `protobuf:"bytes,3,opt,name=put,proto3" json:"put,omitempty"`
	Patch  *OpenAPIEndpoint `protobuf:"bytes,4,opt,name=patch,proto3" json:"patch,omitempty"`
	Delete *OpenAPIEndpoint `protobuf:"bytes,5,opt,name=delete,proto3" json:"delete,omitempty"`
}

func (x *OpenAPIPath) Reset() {
	*x = OpenAPIPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIPath) ProtoMessage() {}

func (x *OpenAPIPath) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIPath.ProtoReflect.Descriptor instead.
func (*OpenAPIPath) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{7}
}

func (x *OpenAPIPath) GetGet() *OpenAPIEndpoint {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *OpenAPIPath) GetPost() *OpenAPIEndpoint {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *OpenAPIPath) GetPut() *OpenAPIEndpoint {
	if x != nil {
		return x.Put
	}
	return nil
}

func (x *OpenAPIPath) GetPatch() *OpenAPIEndpoint {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *OpenAPIPath) GetDelete() *OpenAPIEndpoint {
	if x != nil {
		return x.Delete
	}
	return nil
}

type OpenAPIEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags        []string                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Summary     string                   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Description string                   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	OperationId string                   `protobuf:"bytes,4,opt,name=operationId,proto3" json:"operationId,omitempty"`
	Deprecated  bool                     `protobuf:"varint,5,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	RequestBody *PathRequestBody         `protobuf:"bytes,6,opt,name=requestBody,proto3" json:"requestBody,omitempty"`
	Parameters  []*PathParameters        `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Responses   map[string]*PathResponse `protobuf:"bytes,8,rep,name=responses,proto3" json:"responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Security    []*PathSecurity          `protobuf:"bytes,9,rep,name=security,proto3" json:"security,omitempty"`
	Metadata    map[string]string        `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OpenAPIEndpoint) Reset() {
	*x = OpenAPIEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIEndpoint) ProtoMessage() {}

func (x *OpenAPIEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIEndpoint.ProtoReflect.Descriptor instead.
func (*OpenAPIEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{8}
}

func (x *OpenAPIEndpoint) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OpenAPIEndpoint) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *OpenAPIEndpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OpenAPIEndpoint) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *OpenAPIEndpoint) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *OpenAPIEndpoint) GetRequestBody() *PathRequestBody {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *OpenAPIEndpoint) GetParameters() []*PathParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *OpenAPIEndpoint) GetResponses() map[string]*PathResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *OpenAPIEndpoint) GetSecurity() []*PathSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *OpenAPIEndpoint) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PathSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic      []string `protobuf:"bytes,1,rep,name=basic,proto3" json:"basic,omitempty"`
	ApiKeys    []string `protobuf:"bytes,2,rep,name=apiKeys,proto3" json:"apiKeys,omitempty"`
	Bearer     []string `protobuf:"bytes,3,rep,name=bearer,proto3" json:"bearer,omitempty"`
	OAuth2     []string `protobuf:"bytes,4,rep,name=oAuth2,proto3" json:"oAuth2,omitempty"`
	OpenId     []string `protobuf:"bytes,5,rep,name=openId,proto3" json:"openId,omitempty"`
	CookieAuth []string `protobuf:"bytes,6,rep,name=cookieAuth,proto3" json:"cookieAuth,omitempty"`
}

func (x *PathSecurity) Reset() {
	*x = PathSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSecurity) ProtoMessage() {}

func (x *PathSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSecurity.ProtoReflect.Descriptor instead.
func (*PathSecurity) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{9}
}

func (x *PathSecurity) GetBasic() []string {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *PathSecurity) GetApiKeys() []string {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *PathSecurity) GetBearer() []string {
	if x != nil {
		return x.Bearer
	}
	return nil
}

func (x *PathSecurity) GetOAuth2() []string {
	if x != nil {
		return x.OAuth2
	}
	return nil
}

func (x *PathSecurity) GetOpenId() []string {
	if x != nil {
		return x.OpenId
	}
	return nil
}

func (x *PathSecurity) GetCookieAuth() []string {
	if x != nil {
		return x.CookieAuth
	}
	return nil
}

type PathParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query, cookie, path
	In              string        `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	Name            string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Required        bool          `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	Description     string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AllowReserved   bool          `protobuf:"varint,5,opt,name=allowReserved,proto3" json:"allowReserved,omitempty"`
	Style           string        `protobuf:"bytes,6,opt,name=style,proto3" json:"style,omitempty"`
	Explode         bool          `protobuf:"varint,7,opt,name=explode,proto3" json:"explode,omitempty"`
	AllowEmptyValue bool          `protobuf:"varint,8,opt,name=allowEmptyValue,proto3" json:"allowEmptyValue,omitempty"`
	Schema          *SchemaObject `protobuf:"bytes,9,opt,name=schema,proto3" json:"schema,omitempty"`
	Example         string        `protobuf:"bytes,10,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *PathParameters) Reset() {
	*x = PathParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathParameters) ProtoMessage() {}

func (x *PathParameters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathParameters.ProtoReflect.Descriptor instead.
func (*PathParameters) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{10}
}

func (x *PathParameters) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *PathParameters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PathParameters) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *PathParameters) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PathParameters) GetAllowReserved() bool {
	if x != nil {
		return x.AllowReserved
	}
	return false
}

func (x *PathParameters) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *PathParameters) GetExplode() bool {
	if x != nil {
		return x.Explode
	}
	return false
}

func (x *PathParameters) GetAllowEmptyValue() bool {
	if x != nil {
		return x.AllowEmptyValue
	}
	return false
}

func (x *PathParameters) GetSchema() *SchemaObject {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *PathParameters) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

type PathRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Required    bool                    `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	Content     *PathRequestBodyContent `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PathRequestBody) Reset() {
	*x = PathRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathRequestBody) ProtoMessage() {}

func (x *PathRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathRequestBody.ProtoReflect.Descriptor instead.
func (*PathRequestBody) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{11}
}

func (x *PathRequestBody) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PathRequestBody) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *PathRequestBody) GetContent() *PathRequestBodyContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type PathRequestBodyContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationJson *ApplicationContent `protobuf:"bytes,1,opt,name=applicationJson,proto3" json:"application/json,omitempty"`
	ApplicationXml  *ApplicationContent `protobuf:"bytes,2,opt,name=applicationXml,proto3" json:"application/xml,,omitempty"`
	ApplicationYaml *ApplicationContent `protobuf:"bytes,3,opt,name=applicationYaml,proto3" json:"application/yaml,,omitempty"`
}

func (x *PathRequestBodyContent) Reset() {
	*x = PathRequestBodyContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathRequestBodyContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathRequestBodyContent) ProtoMessage() {}

func (x *PathRequestBodyContent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathRequestBodyContent.ProtoReflect.Descriptor instead.
func (*PathRequestBodyContent) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{12}
}

func (x *PathRequestBodyContent) GetApplicationJson() *ApplicationContent {
	if x != nil {
		return x.ApplicationJson
	}
	return nil
}

func (x *PathRequestBodyContent) GetApplicationXml() *ApplicationContent {
	if x != nil {
		return x.ApplicationXml
	}
	return nil
}

func (x *PathRequestBodyContent) GetApplicationYaml() *ApplicationContent {
	if x != nil {
		return x.ApplicationYaml
	}
	return nil
}

type ApplicationContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *SchemaObject `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *ApplicationContent) Reset() {
	*x = ApplicationContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationContent) ProtoMessage() {}

func (x *ApplicationContent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationContent.ProtoReflect.Descriptor instead.
func (*ApplicationContent) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicationContent) GetSchema() *SchemaObject {
	if x != nil {
		return x.Schema
	}
	return nil
}

// PathResponse is swagger path response
type PathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Content     *PathRequestBodyContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PathResponse) Reset() {
	*x = PathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathResponse) ProtoMessage() {}

func (x *PathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathResponse.ProtoReflect.Descriptor instead.
func (*PathResponse) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{14}
}

func (x *PathResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PathResponse) GetContent() *PathRequestBodyContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type OpenAPIComponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecuritySchemes map[string]*SecuritySchema `protobuf:"bytes,1,rep,name=securitySchemes,proto3" json:"securitySchemes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Schemas         map[string]*Model          `protobuf:"bytes,2,rep,name=schemas,proto3" json:"schemas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OpenAPIComponents) Reset() {
	*x = OpenAPIComponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIComponents) ProtoMessage() {}

func (x *OpenAPIComponents) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIComponents.ProtoReflect.Descriptor instead.
func (*OpenAPIComponents) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{15}
}

func (x *OpenAPIComponents) GetSecuritySchemes() map[string]*SecuritySchema {
	if x != nil {
		return x.SecuritySchemes
	}
	return nil
}

func (x *OpenAPIComponents) GetSchemas() map[string]*Model {
	if x != nil {
		return x.Schemas
	}
	return nil
}

// BasicSecurity is swagger Basic Authorization security (https://swagger.io/docs/specification/authentication/basic-authentication/)
type SecuritySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// http, apiKey, oauth, openIdConnect
	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// header
	In          string `protobuf:"bytes,3,opt,name=in,proto3" json:"in,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// JWT
	BearerFormat string `protobuf:"bytes,11,opt,name=bearerFormat,proto3" json:"bearerFormat,omitempty"`
	// OAuth Flows
	Flows *SecurityOAuthFlows `protobuf:"bytes,12,opt,name=flows,proto3" json:"flows,omitempty"`
	// openId
	OpenIdConnectUrl string `protobuf:"bytes,13,opt,name=openIdConnectUrl,proto3" json:"openIdConnectUrl,omitempty"`
}

func (x *SecuritySchema) Reset() {
	*x = SecuritySchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecuritySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecuritySchema) ProtoMessage() {}

func (x *SecuritySchema) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecuritySchema.ProtoReflect.Descriptor instead.
func (*SecuritySchema) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{16}
}

func (x *SecuritySchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SecuritySchema) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *SecuritySchema) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *SecuritySchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecuritySchema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SecuritySchema) GetBearerFormat() string {
	if x != nil {
		return x.BearerFormat
	}
	return ""
}

func (x *SecuritySchema) GetFlows() *SecurityOAuthFlows {
	if x != nil {
		return x.Flows
	}
	return nil
}

func (x *SecuritySchema) GetOpenIdConnectUrl() string {
	if x != nil {
		return x.OpenIdConnectUrl
	}
	return ""
}

type SecurityOAuthFlows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Implicit *OAuthFlowsImplicit `protobuf:"bytes,1,opt,name=implicit,proto3" json:"implicit,omitempty"`
}

func (x *SecurityOAuthFlows) Reset() {
	*x = SecurityOAuthFlows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityOAuthFlows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityOAuthFlows) ProtoMessage() {}

func (x *SecurityOAuthFlows) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityOAuthFlows.ProtoReflect.Descriptor instead.
func (*SecurityOAuthFlows) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{17}
}

func (x *SecurityOAuthFlows) GetImplicit() *OAuthFlowsImplicit {
	if x != nil {
		return x.Implicit
	}
	return nil
}

type OAuthFlowsImplicit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationUrl string            `protobuf:"bytes,1,opt,name=authorizationUrl,proto3" json:"authorizationUrl,omitempty"`
	Scopes           map[string]string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OAuthFlowsImplicit) Reset() {
	*x = OAuthFlowsImplicit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuthFlowsImplicit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthFlowsImplicit) ProtoMessage() {}

func (x *OAuthFlowsImplicit) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthFlowsImplicit.ProtoReflect.Descriptor instead.
func (*OAuthFlowsImplicit) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{18}
}

func (x *OAuthFlowsImplicit) GetAuthorizationUrl() string {
	if x != nil {
		return x.AuthorizationUrl
	}
	return ""
}

func (x *OAuthFlowsImplicit) GetScopes() map[string]string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

// Model is swagger data models (https://swagger.io/docs/specification/data-models/)
type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string, number, integer, boolean, array, object
	Type       string                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	OneOf      []*SchemaObject          `protobuf:"bytes,2,rep,name=oneOf,proto3" json:"oneOf,omitempty"`
	AllOf      []*SchemaObject          `protobuf:"bytes,3,rep,name=allOf,proto3" json:"allOf,omitempty"`
	AnyOf      []*SchemaObject          `protobuf:"bytes,4,rep,name=anyOf,proto3" json:"anyOf,omitempty"`
	Not        []*SchemaObject          `protobuf:"bytes,5,rep,name=not,proto3" json:"not,omitempty"`
	Properties map[string]*SchemaObject `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Required   []string                 `protobuf:"bytes,7,rep,name=required,proto3" json:"required,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{19}
}

func (x *Model) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Model) GetOneOf() []*SchemaObject {
	if x != nil {
		return x.OneOf
	}
	return nil
}

func (x *Model) GetAllOf() []*SchemaObject {
	if x != nil {
		return x.AllOf
	}
	return nil
}

func (x *Model) GetAnyOf() []*SchemaObject {
	if x != nil {
		return x.AnyOf
	}
	return nil
}

func (x *Model) GetNot() []*SchemaObject {
	if x != nil {
		return x.Not
	}
	return nil
}

func (x *Model) GetProperties() map[string]*SchemaObject {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Model) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

type SchemaObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string, number, integer, boolean, array, object
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Format               string            `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Example              string            `protobuf:"bytes,4,opt,name=example,proto3" json:"example,omitempty"`
	Pattern              string            `protobuf:"bytes,5,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Nullable             bool              `protobuf:"varint,6,opt,name=nullable,proto3" json:"nullable,omitempty"`
	ReadOnly             bool              `protobuf:"varint,7,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	WriteOnly            bool              `protobuf:"varint,8,opt,name=writeOnly,proto3" json:"writeOnly,omitempty"`
	Required             bool              `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`
	Ref                  string            `protobuf:"bytes,10,opt,name=ref,proto3" json:"$ref,omitempty"`
	Default              string            `protobuf:"bytes,11,opt,name=default,proto3" json:"default,omitempty"`
	MinLength            int32             `protobuf:"varint,20,opt,name=minLength,proto3" json:"minLength,omitempty"`
	MaxLength            int32             `protobuf:"varint,21,opt,name=maxLength,proto3" json:"maxLength,omitempty"`
	MultipleOf           int32             `protobuf:"varint,30,opt,name=multipleOf,proto3" json:"multipleOf,omitempty"`
	Minimum              int32             `protobuf:"varint,31,opt,name=minimum,proto3" json:"minimum,omitempty"`
	ExclusiveMinimum     bool              `protobuf:"varint,32,opt,name=exclusiveMinimum,proto3" json:"exclusiveMinimum,omitempty"`
	Maximum              int32             `protobuf:"varint,33,opt,name=maximum,proto3" json:"maximum,omitempty"`
	ExclusiveMaximum     bool              `protobuf:"varint,34,opt,name=exclusiveMaximum,proto3" json:"exclusiveMaximum,omitempty"`
	Enum                 []string          `protobuf:"bytes,41,rep,name=enum,proto3" json:"enum,omitempty"`
	Items                *SchemaObject     `protobuf:"bytes,42,opt,name=items,proto3" json:"items,omitempty"`
	Parameters           []*PathParameters `protobuf:"bytes,51,rep,name=parameters,proto3" json:"parameters,omitempty"`
	AdditionalProperties *SchemaObject     `protobuf:"bytes,60,opt,name=additionalProperties,proto3" json:"additionalProperties,omitempty"`
}

func (x *SchemaObject) Reset() {
	*x = SchemaObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaObject) ProtoMessage() {}

func (x *SchemaObject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaObject.ProtoReflect.Descriptor instead.
func (*SchemaObject) Descriptor() ([]byte, []int) {
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP(), []int{20}
}

func (x *SchemaObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SchemaObject) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *SchemaObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SchemaObject) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *SchemaObject) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *SchemaObject) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *SchemaObject) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *SchemaObject) GetWriteOnly() bool {
	if x != nil {
		return x.WriteOnly
	}
	return false
}

func (x *SchemaObject) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *SchemaObject) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *SchemaObject) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SchemaObject) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *SchemaObject) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *SchemaObject) GetMultipleOf() int32 {
	if x != nil {
		return x.MultipleOf
	}
	return 0
}

func (x *SchemaObject) GetMinimum() int32 {
	if x != nil {
		return x.Minimum
	}
	return 0
}

func (x *SchemaObject) GetExclusiveMinimum() bool {
	if x != nil {
		return x.ExclusiveMinimum
	}
	return false
}

func (x *SchemaObject) GetMaximum() int32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *SchemaObject) GetExclusiveMaximum() bool {
	if x != nil {
		return x.ExclusiveMaximum
	}
	return false
}

func (x *SchemaObject) GetEnum() []string {
	if x != nil {
		return x.Enum
	}
	return nil
}

func (x *SchemaObject) GetItems() *SchemaObject {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SchemaObject) GetParameters() []*PathParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *SchemaObject) GetAdditionalProperties() *SchemaObject {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

var File_github_com_olive_io_olive_api_discoverypb_openapi_proto protoreflect.FileDescriptor

var file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x69,
	0x76, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x6f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x22, 0xc5, 0x03, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x50, 0x49, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x12, 0x2c, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f,
	0x63, 0x73, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73,
	0x12, 0x34, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x52, 0x0a, 0x0a, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50,
	0x49, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x0e, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x36, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x50, 0x49, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x88, 0x01, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x54, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x44, 0x6f, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x63,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x89, 0x02, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50,
	0x49, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x03, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50,
	0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x22, 0x80, 0x05, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x57,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x41, 0x75, 0x74, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x41, 0x75, 0x74, 0x68, 0x22, 0xbf, 0x02,
	0x0a, 0x0e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22,
	0x8e, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0xf7, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x6d, 0x6c, 0x12,
	0x49, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x61,
	0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x47, 0x0a, 0x12, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0x6f, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xea, 0x02, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x1a, 0x5f, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x4e, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x89, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x51, 0x0a,
	0x12, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c,
	0x6f, 0x77, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x49, 0x6d,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x22, 0xc0, 0x01, 0x0a, 0x12, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x49,
	0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x49, 0x6d, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x95, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x6f, 0x6e, 0x65,
	0x4f, 0x66, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x4f, 0x66, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x61, 0x6c,
	0x6c, 0x4f, 0x66, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x6e, 0x79, 0x4f, 0x66, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x61,
	0x6e, 0x79, 0x4f, 0x66, 0x12, 0x2b, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x6e, 0x6f,
	0x74, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x1a, 0x58, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe7, 0x05, 0x0a, 0x0c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x29, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x69, 0x76, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x6f, 0x6c, 0x69,
	0x76, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x3b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescOnce sync.Once
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescData = file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDesc
)

func file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescGZIP() []byte {
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescOnce.Do(func() {
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescData)
	})
	return file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDescData
}

var file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_github_com_olive_io_olive_api_discoverypb_openapi_proto_goTypes = []interface{}{
	(*OpenAPI)(nil),                // 0: discoverypb.OpenAPI
	(*OpenAPIServer)(nil),          // 1: discoverypb.OpenAPIServer
	(*OpenAPIInfo)(nil),            // 2: discoverypb.OpenAPIInfo
	(*OpenAPIContact)(nil),         // 3: discoverypb.OpenAPIContact
	(*OpenAPILicense)(nil),         // 4: discoverypb.OpenAPILicense
	(*OpenAPITag)(nil),             // 5: discoverypb.OpenAPITag
	(*OpenAPIExternalDocs)(nil),    // 6: discoverypb.OpenAPIExternalDocs
	(*OpenAPIPath)(nil),            // 7: discoverypb.OpenAPIPath
	(*OpenAPIEndpoint)(nil),        // 8: discoverypb.OpenAPIEndpoint
	(*PathSecurity)(nil),           // 9: discoverypb.PathSecurity
	(*PathParameters)(nil),         // 10: discoverypb.PathParameters
	(*PathRequestBody)(nil),        // 11: discoverypb.PathRequestBody
	(*PathRequestBodyContent)(nil), // 12: discoverypb.PathRequestBodyContent
	(*ApplicationContent)(nil),     // 13: discoverypb.ApplicationContent
	(*PathResponse)(nil),           // 14: discoverypb.PathResponse
	(*OpenAPIComponents)(nil),      // 15: discoverypb.OpenAPIComponents
	(*SecuritySchema)(nil),         // 16: discoverypb.SecuritySchema
	(*SecurityOAuthFlows)(nil),     // 17: discoverypb.SecurityOAuthFlows
	(*OAuthFlowsImplicit)(nil),     // 18: discoverypb.OAuthFlowsImplicit
	(*Model)(nil),                  // 19: discoverypb.Model
	(*SchemaObject)(nil),           // 20: discoverypb.SchemaObject
	nil,                            // 21: discoverypb.OpenAPI.PathsEntry
	nil,                            // 22: discoverypb.OpenAPIEndpoint.ResponsesEntry
	nil,                            // 23: discoverypb.OpenAPIEndpoint.MetadataEntry
	nil,                            // 24: discoverypb.OpenAPIComponents.SecuritySchemesEntry
	nil,                            // 25: discoverypb.OpenAPIComponents.SchemasEntry
	nil,                            // 26: discoverypb.OAuthFlowsImplicit.ScopesEntry
	nil,                            // 27: discoverypb.Model.PropertiesEntry
}
var file_github_com_olive_io_olive_api_discoverypb_openapi_proto_depIdxs = []int32{
	2,  // 0: discoverypb.OpenAPI.info:type_name -> discoverypb.OpenAPIInfo
	6,  // 1: discoverypb.OpenAPI.externalDocs:type_name -> discoverypb.OpenAPIExternalDocs
	1,  // 2: discoverypb.OpenAPI.servers:type_name -> discoverypb.OpenAPIServer
	5,  // 3: discoverypb.OpenAPI.tags:type_name -> discoverypb.OpenAPITag
	21, // 4: discoverypb.OpenAPI.paths:type_name -> discoverypb.OpenAPI.PathsEntry
	15, // 5: discoverypb.OpenAPI.components:type_name -> discoverypb.OpenAPIComponents
	3,  // 6: discoverypb.OpenAPIInfo.contact:type_name -> discoverypb.OpenAPIContact
	4,  // 7: discoverypb.OpenAPIInfo.license:type_name -> discoverypb.OpenAPILicense
	6,  // 8: discoverypb.OpenAPITag.externalDocs:type_name -> discoverypb.OpenAPIExternalDocs
	8,  // 9: discoverypb.OpenAPIPath.get:type_name -> discoverypb.OpenAPIEndpoint
	8,  // 10: discoverypb.OpenAPIPath.post:type_name -> discoverypb.OpenAPIEndpoint
	8,  // 11: discoverypb.OpenAPIPath.put:type_name -> discoverypb.OpenAPIEndpoint
	8,  // 12: discoverypb.OpenAPIPath.patch:type_name -> discoverypb.OpenAPIEndpoint
	8,  // 13: discoverypb.OpenAPIPath.delete:type_name -> discoverypb.OpenAPIEndpoint
	11, // 14: discoverypb.OpenAPIEndpoint.requestBody:type_name -> discoverypb.PathRequestBody
	10, // 15: discoverypb.OpenAPIEndpoint.parameters:type_name -> discoverypb.PathParameters
	22, // 16: discoverypb.OpenAPIEndpoint.responses:type_name -> discoverypb.OpenAPIEndpoint.ResponsesEntry
	9,  // 17: discoverypb.OpenAPIEndpoint.security:type_name -> discoverypb.PathSecurity
	23, // 18: discoverypb.OpenAPIEndpoint.metadata:type_name -> discoverypb.OpenAPIEndpoint.MetadataEntry
	20, // 19: discoverypb.PathParameters.schema:type_name -> discoverypb.SchemaObject
	12, // 20: discoverypb.PathRequestBody.content:type_name -> discoverypb.PathRequestBodyContent
	13, // 21: discoverypb.PathRequestBodyContent.applicationJson:type_name -> discoverypb.ApplicationContent
	13, // 22: discoverypb.PathRequestBodyContent.applicationXml:type_name -> discoverypb.ApplicationContent
	13, // 23: discoverypb.PathRequestBodyContent.applicationYaml:type_name -> discoverypb.ApplicationContent
	20, // 24: discoverypb.ApplicationContent.schema:type_name -> discoverypb.SchemaObject
	12, // 25: discoverypb.PathResponse.content:type_name -> discoverypb.PathRequestBodyContent
	24, // 26: discoverypb.OpenAPIComponents.securitySchemes:type_name -> discoverypb.OpenAPIComponents.SecuritySchemesEntry
	25, // 27: discoverypb.OpenAPIComponents.schemas:type_name -> discoverypb.OpenAPIComponents.SchemasEntry
	17, // 28: discoverypb.SecuritySchema.flows:type_name -> discoverypb.SecurityOAuthFlows
	18, // 29: discoverypb.SecurityOAuthFlows.implicit:type_name -> discoverypb.OAuthFlowsImplicit
	26, // 30: discoverypb.OAuthFlowsImplicit.scopes:type_name -> discoverypb.OAuthFlowsImplicit.ScopesEntry
	20, // 31: discoverypb.Model.oneOf:type_name -> discoverypb.SchemaObject
	20, // 32: discoverypb.Model.allOf:type_name -> discoverypb.SchemaObject
	20, // 33: discoverypb.Model.anyOf:type_name -> discoverypb.SchemaObject
	20, // 34: discoverypb.Model.not:type_name -> discoverypb.SchemaObject
	27, // 35: discoverypb.Model.properties:type_name -> discoverypb.Model.PropertiesEntry
	20, // 36: discoverypb.SchemaObject.items:type_name -> discoverypb.SchemaObject
	10, // 37: discoverypb.SchemaObject.parameters:type_name -> discoverypb.PathParameters
	20, // 38: discoverypb.SchemaObject.additionalProperties:type_name -> discoverypb.SchemaObject
	7,  // 39: discoverypb.OpenAPI.PathsEntry.value:type_name -> discoverypb.OpenAPIPath
	14, // 40: discoverypb.OpenAPIEndpoint.ResponsesEntry.value:type_name -> discoverypb.PathResponse
	16, // 41: discoverypb.OpenAPIComponents.SecuritySchemesEntry.value:type_name -> discoverypb.SecuritySchema
	19, // 42: discoverypb.OpenAPIComponents.SchemasEntry.value:type_name -> discoverypb.Model
	20, // 43: discoverypb.Model.PropertiesEntry.value:type_name -> discoverypb.SchemaObject
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_github_com_olive_io_olive_api_discoverypb_openapi_proto_init() }
func file_github_com_olive_io_olive_api_discoverypb_openapi_proto_init() {
	if File_github_com_olive_io_olive_api_discoverypb_openapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPILicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPITag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIExternalDocs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathRequestBodyContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIComponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecuritySchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityOAuthFlows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuthFlowsImplicit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_olive_io_olive_api_discoverypb_openapi_proto_goTypes,
		DependencyIndexes: file_github_com_olive_io_olive_api_discoverypb_openapi_proto_depIdxs,
		MessageInfos:      file_github_com_olive_io_olive_api_discoverypb_openapi_proto_msgTypes,
	}.Build()
	File_github_com_olive_io_olive_api_discoverypb_openapi_proto = out.File
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_rawDesc = nil
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_goTypes = nil
	file_github_com_olive_io_olive_api_discoverypb_openapi_proto_depIdxs = nil
}
